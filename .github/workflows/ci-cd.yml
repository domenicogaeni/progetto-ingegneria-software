name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: project_testing
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy .env
        working-directory: ./back-end
        run: cp environments/ci/.env.example .env

      - name: Install Dependencies
        working-directory: ./back-end
        run: composer install --ignore-platform-reqs

      - name: Run Migrations
        working-directory: ./back-end
        run: php artisan migrate
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

      - name: Run PHPUnit tests
        working-directory: ./back-end
        run: composer test
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          XDEBUG_MODE: coverage

      - name: Run Psalm
        working-directory: ./back-end
        run: ./vendor/bin/psalm --shepherd --show-info=false --stats

  deploy-backend:
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy production Dockerfile
        run: cp ./back-end/environments/prod/Dockerfile Dockerfile

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          docker_build_args: |
            DB_HOST
            DB_DATABASE
            DB_USERNAME
            DB_PASSWORD
        env:
          DB_HOST: ${{secrets.DB_HOST}}
          DB_DATABASE: ${{secrets.DB_DATABASE}}
          DB_USERNAME: ${{secrets.DB_USERNAME}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}

  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME_FRONTEND}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          appdir: front-end
